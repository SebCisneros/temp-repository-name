{"ast":null,"code":"var _jsxFileName = \"/Users/spongel/Documents/GitHub/temp-repository-name/frontend/src/Components/PrivateRoutes.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useAuth } from \"../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function PrivateRouteNotLoggedIn({\n  component: Component,\n  ...rest\n}) {\n  _s();\n\n  const {\n    currentUser\n  } = useAuth();\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      return currentUser ? /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PrivateRouteNotLoggedIn, \"byfRDkJ+t3MKhIwXgwbXYFaZtD0=\", false, function () {\n  return [useAuth];\n});\n\n_c = PrivateRouteNotLoggedIn;\nexport function PrivateRouteLoggedIn({\n  component: Component,\n  ...rest\n}) {\n  _s2();\n\n  const {\n    currentUser\n  } = useAuth();\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      return !currentUser ? /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 31\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 58\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(PrivateRouteLoggedIn, \"byfRDkJ+t3MKhIwXgwbXYFaZtD0=\", false, function () {\n  return [useAuth];\n});\n\n_c2 = PrivateRouteLoggedIn;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PrivateRouteNotLoggedIn\");\n$RefreshReg$(_c2, \"PrivateRouteLoggedIn\");","map":{"version":3,"sources":["/Users/spongel/Documents/GitHub/temp-repository-name/frontend/src/Components/PrivateRoutes.js"],"names":["React","Route","Redirect","useAuth","PrivateRouteNotLoggedIn","component","Component","rest","currentUser","props","PrivateRouteLoggedIn"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,wBAAxB;;AAEA,OAAO,SAASC,uBAAT,CAAiC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAjC,EAAoE;AAAA;;AACzE,QAAM;AAAEC,IAAAA;AAAF,MAAkBL,OAAO,EAA/B;AACA,sBACE,QAAC,KAAD,OACMI,IADN;AAEE,IAAA,MAAM,EAAGE,KAAD,IAAW;AACjB,aAAOD,WAAW,gBAChB,QAAC,SAAD,OAAeC;AAAf;AAAA;AAAA;AAAA;AAAA,cADgB,gBAGhB,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAHF;AAKD;AARH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAdeL,uB;UACUD,O;;;KADVC,uB;AAgBhB,OAAO,SAASM,oBAAT,CAA8B;AAAEL,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAA9B,EAAiE;AAAA;;AACtE,QAAM;AAAEC,IAAAA;AAAF,MAAkBL,OAAO,EAA/B;AACA,sBACE,QAAC,KAAD,OACMI,IADN;AAEE,IAAA,MAAM,EAAGE,KAAD,IAAW;AACjB,aAAO,CAACD,WAAD,gBAAe,QAAC,SAAD,OAAeC;AAAf;AAAA;AAAA;AAAA;AAAA,cAAf,gBAA0C,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAjD;AACD;AAJH;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;IAVeC,oB;UACUP,O;;;MADVO,oB","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useAuth } from \"../context/AuthContext\";\n\nexport function PrivateRouteNotLoggedIn({ component: Component, ...rest }) {\n  const { currentUser } = useAuth();\n  return (\n    <Route \n      {...rest}\n      render={(props) => {\n        return currentUser ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/login\" />\n        );\n      }}\n    ></Route>\n  );\n}\n\nexport function PrivateRouteLoggedIn({ component: Component, ...rest }) {\n  const { currentUser } = useAuth();\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        return !currentUser ? <Component {...props} /> : <Redirect to=\"/profile\" />;\n      }}\n    ></Route>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}